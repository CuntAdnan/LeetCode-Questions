https://leetcode.com/problems/odd-even-linked-list/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        
        
        ListNode*oddTail=NULL;
        ListNode*oddHead=NULL;
        
        ListNode*evenHead=NULL;
        ListNode*evenTail=NULL;
        
        int count=1;
        
        while(head!=NULL){
            if(count%2!=0){
               ListNode *n = new ListNode(head->val);
               if(oddHead==NULL){ // means odd vala is empty
                   oddHead=n;
                   oddTail=n;
               }else{
                   oddTail->next=n;
                   oddTail=n;
               }
               count++;
            }else{
                ListNode*n=new ListNode(head->val);
                if(evenHead==NULL){
                    evenHead=n;
                    evenTail=n;
                }else{
                    evenTail->next=n;
                    evenTail=n;
                }
                count++;
            }
            head=head->next;
        }
        if(oddTail){
          oddTail->next=evenHead;
        }
       
        return oddHead;
        
            
    }
};