https://leetcode.com/problems/remove-linked-list-elements/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
       
      if(head == NULL){
          return head;
      } 
      while(head!=NULL and head->val == val){
          head=head->next;
      }  
      ListNode *curr = head;
      while(curr != NULL and curr->next != NULL){
          if(curr->next->val ==val){
              ListNode *n = curr->next;
              curr->next=n->next;
              n->next = NULL;
              delete n;
          }else{
              curr=curr->next;
          }
      }
      return head;
    }
};