https://leetcode.com/problems/remove-duplicates-from-sorted-list/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    
    
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode *curr = head;
         while(curr!=NULL and curr->next!=NULL){  // just iterate over the list...
             ListNode *n = curr->next;
             if(curr->val==n->val){
                 curr->next=n->next;
             }else{
                 curr=curr->next;
             }
         }
        return head;
    }
    
    
};